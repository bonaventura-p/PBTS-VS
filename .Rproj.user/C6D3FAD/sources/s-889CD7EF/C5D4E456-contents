

source("Scaling_Functions.R") 


#file 2 includes dropped dodgy reading item
score.data <- read.table("V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Andorra/score.data2.txt", header=T, sep="\t")
raw.data <- read.table("V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Andorra/raw.data2.txt", header=T, sep="\t")
gold.data <- read.table("V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Andorra/gold.data.txt", header=T, sep="\t")


#
#create math datafiles
score.data %>%
  select(., matches("^PM\\d{4}Q\\d{2}[A-Z]*")) -> score.math

raw.data %>%
  select(., matches("^PM\\d{4}Q\\d{2}[A-Z]*")) -> raw.math

##############################################
#Table 2. Studentsâ€™ sample: grade gender
##############################################

#please add

#################################################################
#Table 3. Correlation between score frequencies 0,1,2 pilot 
####################################################################


# when update this please add select(,matches("^PM"))
"temp_intlfreq.xlsx" %>%
  read.xlsx(., colNames=TRUE) %>%
  as.data.frame(.) -> temp.intlfreq 



ctt.mod1 %>%
  select(., item, Categ, RelFreq) %>%
  dplyr::rename(., item.name=item) %>%
  mutate(., RelFreq = RelFreq*100) %>%
  spread(., key = Categ, value = RelFreq) %>% 
  mutate_at(.,vars("2"),funs(replace(.,is.na(.),0))) %>%
  full_join(., temp.intlfreq, by="item.name") -> table3.output


#final plot
table3.output %>% 
  ggplot(., aes(x=`1.x`, y=`1.y`)) +
  geom_smooth(method=lm, colour="darkgrey", fill="grey")+
  geom_label(label=table3.output$item.name, color="black", size=2)+
  scale_x_continuous(limits = c(0, 100))+
  scale_y_continuous(limits = c(0, 100))+
  geom_abline(slope=1,intercept = 0,color="lightgrey",size=0.5)+
  labs(x="National CTT difficulty (% of correct responses)",
       y="International CTT difficulty (% of correct responses)",title ="CTT Difficulty comparison")+
  theme_gray()


#####################################
# Table 7. Dodgy items based on difficulty differences
###################################
"temptam.data.xlsx" %>%
  read.xlsx(., colNames=TRUE) %>%
  as.data.frame(.) -> temptam.data

temptam.data %>%
  dplyr::filter(.,  grepl("^PM\\d{4}Q\\d{2}[A-Z]*",item.name)) %>%
  dplyr::mutate(.,ztam.value=(tam.value-mean(tam.value))/sd(tam.value)) ->tam.math


score.math %>%
  tam(.) -> tam.mod1

#compute sig. diff stat
data.frame(item.name = dimnames(tam.mod1$A)[[3]], 
                   tam.value = tam.mod1$xsi$xsi) -> table7.input

table7.input %>%
  dplyr::mutate(., ztam.value = (tam.value-mean(tam.value))/sd(tam.value),
                zdif = if_else(
                  ztam.value - tam.math$ztam.value >= qnorm(0.975), 1,
                  if_else(ztam.value - tam.math$ztam.value <= -qnorm(0.975), -1,0))) %>%
  full_join(., tam.math, by="item.name") -> table7.output

#plot 1

table7.output %>%
  ggplot(., aes(x=tam.value.x, y=tam.value.y,label=ifelse(zdif != 0,item.name,""),color=factor(zdif)))+
  geom_point(aes(size=2))+
  scale_size_identity()+
  geom_smooth(method=lm, se=FALSE)+ 
  geom_text_repel(aes(colour = factor(zdif)),size=3) +
  scale_color_manual(values=c('darkblue','darkgrey', 'darkred'))+
  scale_x_continuous(limits = c(-3.5, 5.5))+
  scale_y_continuous(limits = c(-3.5, 5.5))+
  geom_abline(slope = 1, intercept = 0, color="lightgrey", size = 0.5)+
  labs(x="National IRT difficulty (beta parameter)",
       y="International IRT difficulty (beta parameter)", title ="IRT Difficulty comparison")+
  theme_gray()+
  theme(legend.position="bottom")-> scatterPlot

#geom_rug(data=table7.output[ !(table7.output$zdif %in% 0),])+ #please check if doing for all/none/group

#plot density

table7.output %>%
  select(., tam.value.x, tam.value.y) %>%
  dplyr::rename(., tam.nat = tam.value.x, tam.intl = tam.value.y) %>%
  gather(., tam.source, tam.value, factor_key=TRUE) %>%
  ggplot(., aes(tam.value, fill = tam.source)) + 
  geom_density(alpha=.5) + 
  scale_fill_manual(values = c('tomato','#999999'))+
  labs(x="IRT difficulty (beta parameter)", title ="IRT Difficulty density")+
  theme_gray()+
  theme(legend.position="bottom")-> density

#plots together
grid.arrange( scatterPlot , density,   ncol=2, nrow=1,widths = c(1, 0.6))



#####################################################
#Table 8. Dodgy items based on coefficient MNSQ:
####################################################

score.math %>%
  tam(.) -> tam.mod1

#computes outfit and infit
tam.fit(tam.mod1)[[1]] -> table8.input

table8.input %>%
  select(., parameter, Infit, Infit_t)%>%
  mutate(., w.mnsq = if_else(Infit > 1.2, 1, if_else(Infit < 0.8, 1, 0))) -> table8.output

############################################
#Table 9. Dodgy items based on DIF criteria
############################################


#model
score.math %>%
  tam(.) -> tam.mod1



#we need gender as values not df
# replace with dataset name and gender variable name
gender<-gold.data[,"ST004Q01_15"] #1 female, 2 male


#Set up facet variable
formulaA <- ~item+item:step+item*gender
facets <- as.data.frame(gender)

score.math %>%
  tam.mml.mfr( ., facets= facets , formulaA = formulaA )->tamdif.mod


tamdif.mod[[5]] %>% as.data.frame(.) -> tam.mod3
  
tam.mod3 %>%  
  select(., item, xsi.item) %>%
  mutate(., gender=substr(item,17,18),item=substr(item,1,9)) %>%
  spread(., key = gender, value = xsi.item) %>%
  mutate(., seq=seq(1,40), gdif = if_else(`2` - `1` > 0.25, 1, if_else(`2` - `1` < -0.25, -1, 0)))->table9.output #difference as boys-girls


#plot
table9.output %>%
  select(.,seq,gdif,item)->table9.res

table9.output %>%
  select(.,`1`,`2`) %>%
  gather(., key=gender, value=dif.value, factor_key=TRUE) %>%
  mutate(.,seq=seq(1,40) ) %>%
  full_join(., table9.res,by="seq") %>%
  ggplot(., aes(x=item, y=dif.value, group=gender)) +
  geom_line(aes(color = gender))+
  geom_point(aes(color = gender,shape=ifelse(gdif==0,1,16)),size=3)+
  labs(y="IRT difficulty (beta parameter)", title ="Gender DIF")+ 
  scale_color_manual(values=c('#E69F00','#999999'))+
  scale_shape_identity()+
  theme_gray()+
  theme(axis.text.x = element_text(angle = 90), 
        legend.position="bottom")


######################################################################
#Table 4. Dodgy items based on biserial-point values - criteria #1
####################################################################


#model
score.math %>%
  tam(.) -> tam.mod1

#point biserial
pv.mod1<- tam.pv(tam.mod1,nplausible=5)

ctt.mod1  <-tam.ctt(score.math, pvscores = pv.mod1$pv,  group=NULL , progress=TRUE)

#Criteria #1: Categories 0 must have a discrimination biserial-point index negative.
#Criteria #2: The discrimination biserial-point for a partial credit item must be ordered
#Criteria #3: Discrimination of the correct answer must be greater than 0,2. 

ctt.mod1 %>%
  select(., item, Categ, rpb.PV) %>%
  spread(., key = Categ, value = rpb.PV) %>%
  mutate_at(.,vars("2"),funs(replace(.,is.na(.),1)))-> table4.input 


table4.input %>%
  mutate(., crit.zero = ifelse(`0` < 0, 0, 1),
         crit.one = ifelse(`0`<`1` && `1`<`2`, 0, 1),
         crit.two = ifelse(`1`>0.2, 0, 1)) %>%
  select(., item, `1`, matches("^crit")) %>%
  dplyr::rename(., discr=`1`) -> table4.output


###########################3
#wright map
###########################3
tam.mod1 %>%
  tam.threshold(., prob.lvl = 0.5) %>% 
  as.data.frame(.) %>%
  mutate(., item=rownames(.)) %>%
  gather(., key=Cat, value=tam.value, Cat1:Cat2, factor_key=TRUE) %>%
  mutate(., item.name = paste(item,Cat,sep="_"))-> item.est

tam.mod1 %>%
WrightMap.sim.PV(.,ndim=.$ndim) %>%
  as.data.frame(.) %>%
  dplyr::rename(., theta=`.`)->pers.est


lim.x.min <- min(c(pers.est$theta, item.est$tam.value),na.rm=TRUE) +0.3
lim.x.max <- max(c(pers.est$theta, item.est$tam.value),na.rm=TRUE) + 0.3

pers.est %>%
  ggplot(., aes(x = theta)) +
  geom_histogram(aes(y=..density..), binwidth = 0.3, fill = "darkgrey", col="black", na.rm = TRUE) +
  geom_density(alpha=.2, fill="sandybrown") +
  xlim(lim.x.min, lim.x.max) +
  coord_flip() + 
  scale_y_reverse() +
  xlab("Student ability") +
  theme_gray()+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) -> theta.density


item.est %>%
  ggplot(., aes(x=item, y=tam.value, label=item.name)) + 
  geom_point(color = '#999999', shape=18, size=3)+
  scale_y_continuous(position = "right",limits=c(lim.x.min, lim.x.max))+
  geom_text_repel(col="#999999",size=2.5)+
  theme_gray()+
  theme(axis.title.x = element_blank(),
        axis.text.x=element_blank(), 
        axis.ticks.x=element_blank())+
  ylab("Item difficulty")-> beta.plot

#plot_grid(theta.density, beta.plot)
grid.arrange( theta.density , beta.plot,   ncol=2, nrow=1,widths = c(1, 1),top="Wright Map")


#create functions for tables
# create objects for graphs using rich majerus as template
# add primary analysis and mean/proficiency levels at the end (option for remove items)
# do onepage per analysis with the three domains stacked
#export as pdf,word html
#summary for all domains at the top

