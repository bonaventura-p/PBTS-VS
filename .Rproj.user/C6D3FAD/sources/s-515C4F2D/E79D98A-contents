
library("xlsx")
library("openxlsx") #for big excel files
library("data.table")

#andorra files
  path2cog<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Andorra/Data/2E/SCORED_Stdcogitem.xlsx"
  path2raw<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Andorra/Data/2E/RAW_Stdcogitem.xlsx"
  path2pca<-"V:/Pacileo_B/NOBACKUP/PISA PM/PFS/AND_pca.csv"
  path2gold<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Andorra/Data/2E/StdQ_golddataset17_cleaned.xlsx"

#colombia files
# path2cog<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Colombia/Data/3. Administration in April 2018/1. Original datasets/SCORED_Stdcogitem (6).xlsx" 
#   path2raw<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Colombia/Data/3. Administration in April 2018/1. Original datasets/RAW_Stdcogitem (5)backup.xlsx" 
#   path2pca<-"V:/Pacileo_B/NOBACKUP/PISA PM/PFS/COL_pca0419.csv" 
#   path2gold<-'V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Colombia/Data/3. Administration in April 2018/1. Original datasets/StdQ_golddataset17(11).xlsx'
#  # 


# load datafiles cog raw gold items pca
 # path2cog<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Colombia/Data/4. Administration in November 2018/Data from ICFES second round/SCORED_Stdcogitem (8).xlsx"
 # path2raw<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Colombia/Data/4. Administration in November 2018/Data from ICFES second round/RAW_Stdcogitem (7).xlsx"
 # path2pca<-"V:/Pacileo_B/NOBACKUP/PISA PM/PFS/COL_pca1118.csv"
 # path2gold<-"V:/PISA/BACKUP/PISA/PISA for Schools/4. Countries/Colombia/Data/4. Administration in November 2018/Data from ICFES second round/StdQ_golddataset17 (14).xlsx"


# load data
cog.data<-read.xlsx(path2cog, sheet="Code",colNames=T)
raw.data<-read.xlsx(path2raw, sheet="Code",colNames=T,cols=1:143) ##exclude empty cols
pca.data<-read.csv(path2pca,header=T)
gold.data<-read.xlsx(path2gold, sheet="Code",colNames=T)


 path2tam<-"//main.oecd.org/ASgenEDU/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Item parameters/tam.parameters.xlsx"
  tam.data<-read.xlsx(path2tam, sheet="items",colNames=T)
 

# 
# path2tam<-"//main.oecd.org/ASgenEDU/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Item parameters/TAM_parameters.xlsx"
# # 
#  tam.read<-read.xlsx(path2tam, sheet="read",colNames=T)
#  tam.math<-read.xlsx(path2tam, sheet="math",colNames=T)
#  tam.scie<-read.xlsx(path2tam, sheet="scie",colNames=T)
##################################################################
#ANDORRA SPECIFIC COMMANDS (should go in the data preparation)
  cog.data<-cog.data[!(cog.data$fullid %in% c(90000001004,90000001006,90000003014,90000003021)),]
  raw.data<-raw.data[!(raw.data$fullid %in% c(90000001004,90000001006,90000003014,90000003021)),]
  gold.data$HISEI<-na.aggregate(gold.data$HISEI, list(stidsch = gold.data$stidsch), mean,na.rm=TRUE)
  cog.data[,'PR6013Q08']<-NULL
  raw.data[,'PR6013Q08']<-NULL
  
  gold.data$entid<-gold.data$stidsch 
  raw.data$entid<-gold.data$entid

#COLOMBIA SPECIFIC COMMANDS (should go in data preparation)
# 2nd round only
 # cog.data %<>% .[!(cog.data$fullid %in% c('101_011006938',	'101_011107029',	'201_013808675',	'301_013808725',	'401_011107004',	'401_011807522',	'501_010006431',	'601_011407188',	'601_012307818',	'701_011006937')),]
 # raw.data %<>% .[!(raw.data$fullid %in% c('101_011006938',	'101_011107029',	'201_013808675',	'301_013808725',	'401_011107004',	'401_011807522',	'501_010006431',	'601_011407188',	'601_012307818',	'701_011006937')),]
 # gold.data$stidsch<-gold.data$entid
 # cog.data[,'PR6017Q05']<-NULL

#as.numeric(levels(f))[f]
#Colombia custom cleaning
# # #COLOMBIA SPECIFIC COMMANDS 3rd round
# gold.data$stidsch<-gold.data$entid
# # 
# gold.data$ST004Q01_15 %<>% as.integer(.)
# #  
# cog.data[,'PR6017Q05']<-NULL
 
 ##############################################
 
 # general cleaning
 # dirty command to ensure no missings (it does not alter the subsequent analysis)
 raw.data %<>% mutate_at(., vars(matches("^P[RSM]\\d{4}Q\\d{2}.?$")), funs(replace(., is.na(.), "n"))) 
 
  #dropping duplicated columnS (if any)
  gold.data %<>% subset(., select=which(!duplicated(names(.))))   
  
  
 #removing T's at the end of item names (if any)
  colnames(cog.data) <- gsub('B', '', colnames(cog.data), fixed=TRUE)
 colnames(cog.data) <- gsub('T', '', colnames(cog.data), fixed=TRUE)
 colnames(raw.data) <- gsub('T', '', colnames(raw.data), fixed=TRUE)
 
 #gold.data renaming weights
 gold.data %<>%
   setNames(
     plyr::mapvalues(x = names(.),
                     from = c('W_STU', sprintf('rwgt%d',1:80)), 
                     to = c('W_FSTUWT', sprintf('W_FSTR%d',1:80)))
   )
 
 cog.data[,'PR6004Q05A']<-NULL
 raw.data[,'PR6004Q05A']<-NULL
 
 
 ##############################################

 

##############################################

#re do for each country/cycle
write.table(gold.data, 
            "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Andorra/gold.data.txt",
              sep="\t", col.names=T, row.names = F)

write.table(cog.data, 
            "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Andorra/score.data.txt",
            sep="\t", col.names=T, row.names = F)

write.table(raw.data, 
            "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Andorra/raw.data.txt",
            sep="\t", col.names=T, row.names = F)

write.table(pca.data, 
            "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Andorra/pca.data.txt",
            sep="\t", col.names=T, row.names = F)


# write.table(tam.data, 
#             "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Item parameters/tam.data.txt",
#             sep="\t", col.names=T, row.names = F)

# do only once
# write.table(tam.read, 
#            "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Item parameters/tam.read.txt",
#             sep="\t", col.names=T, row.names = F)
# write.table(tam.math, 
#             "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Item parameters/tam.math.txt",
#             sep="\t", col.names=T, row.names = F)
# write.table(tam.scie, 
#             "V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Item parameters/tam.scie.txt",
#            sep="\t", col.names=T, row.names = F)