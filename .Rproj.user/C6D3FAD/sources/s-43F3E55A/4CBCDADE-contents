# UI components.
ui2 <- fluidPage(
  titlePanel("Shiny Viz!"),
  
  fluidRow( class= "R1",
            tabsetPanel(type= "pills",
                        
                        tabPanel("Controls",
                                 fluidRow(column(4, offset=1, selectInput("X", label="x var", 
                                                                          choices = list("Age" = "Age", "Weight" = "Weight", "Circumference" = "Circumference"),
                                                                          multiple=F) ),
                                          column(4,selectInput("Y", label="y var", 
                                                               choices = list("Age" = "Age", "Weight" = "Weight", "Circumference" = "Circumference"),
                                                               multiple=F))) ,
                                 fluidRow(column(5, offset=1, plotOutput("plot", height = "400px") ),
                                          column(5, class= "R2C2", helpText("This is an exemple") ) ) ),
                        tabPanel("output_at_some_point",
                                 div(style = "height:800px; background-color: yellow;", "This is an example")))  
            
  ), tags$head(tags$style(".R2C2{height:250px; background-color: red;}
                      .R1{background-color: lightgray;}"))
)



# Create fake data
DF <- data.frame( Age = rnorm(50, 45, 20), Weight= runif(50, 50 , 200), Circumference =  runif(50, 30 , 100) )  

# server component
server2 <- function(input, output) {  
  output$plot <- renderPlot({
    DF$X <- DF[, which(names(DF) == input$X)]
    DF$Y <- DF[, which(names(DF) == input$Y)]   
    ggplot(DF, aes( x= X, y= Y)) + geom_point() + labs(list(x = input$X, y = input$Y))
  } )
} 


shinyApp(ui=ui2, server=server2)