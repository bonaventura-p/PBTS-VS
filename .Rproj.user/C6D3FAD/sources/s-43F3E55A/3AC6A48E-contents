
# Structure: 
# run initialisation file
source("//as-gen-1/ASgenEDU/Pacileo_B/NOBACKUP/PISA PM/PFS/Scaling_Functions.R") 
##############################################
#data loading

pca.data <- read.table("V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Colombia/Round3/pca.data.txt", header=T, sep="\t")
raw.data <- read.table("V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Colombia/Round3/raw.data.txt", header=T, sep="\t")
score.data <- read.table("V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Colombia/Round3/score.data.txt", header=T, sep="\t")
gold.data <- read.table("V:/PISA/BACKUP/PISA/PISA for Schools/11. Item Parameters/Data/Colombia/Round3/gold.data.txt", header=T, sep="\t")

##############################################

# define aux data frame
aux <- select(gold.data,matches("^W_FSTUWT$|^W_FSTR\\d+$|^stidsch$|^stidstd$"))

#  get direct regressors
direct.regs <- DirectRegs(stu.data=gold.data, raw.data=raw.data) 
  
# do pca
pca.res  <-  PcaComp(pca.data=pca.data) 
    
# join pca direct regressors
direct.regs %<>% cbind(.,pca.res)


domains <- c("read","math","scie")

Reslist <- list()
for(domn in domains) {
# get item parameters
xsi.fixed <- AnchorValues(domn=domn, score.data=score.data, item.data=tam.data) 

# do scaling
res <- PFSscale(domn=domn, resp=score.data, Y=direct.regs, xsi.fixed=xsi.fixed, aux=aux) 

Reslist[[length(Reslist)+1]] <- res

}

Reslist[[1]]->read

resMean<-pisa.mean.pv(pvlabel="READ", by = "stidsch",data =res) 

#creating dataset
#mean
resMean %<>%
  select(.,stidsch,Mean,matches("s.e.")) %>%
  setnames(c("stidsch",paste("read","score",sep='_'),paste("read","score_se",sep='_'))) %>%
  {.}->SchoolRead

# do secondary analysis and plots



#Steps: 


# put all of this in a dashboard/markdown
